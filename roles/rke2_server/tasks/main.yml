---

- name: Stop rke2-init
  systemd:
    name: rke2-init
    state: stopped
  failed_when: false

- name: Clean previous runs of rke2-init  # noqa command-instead-of-module
  # The systemd module does not support "reset-failed", so we need to resort to command.
  command: systemctl reset-failed rke2-init
  failed_when: false
  changed_when: false

- name: Deploy RKE2 http_proxy conf
  include_tasks: http_proxy.yml
  when: proxy_env is defined

- name: Create manifests directory on first master
  file:
    path: /var/lib/rancher/rke2/server/manifests
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create CNI config manifest
  template:
    src: "rke2-canal-config.yaml.j2"
    dest: "/var/lib/rancher/rke2/server/manifests/rke2-canal-config.yaml"
    owner: root
    group: root
    mode: '0644'

- name: Deploy vip manifest
  include_tasks: vip.yml

- name: Deploy metallb manifest
  include_tasks: metallb.yml
  tags: metallb

- name: Create rke dir
  file:
    path: /etc/rancher/rke2
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create RKE2 config
  template:
    src: "rke2-config.yaml.j2"
    dest: "/etc/rancher/rke2/config.yaml"
    owner: root
    group: root
    mode: '0644'
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Init cluster inside the transient rke2-init service
  command:
    cmd: "systemd-run -p RestartSec=2 \
                      -p Restart=on-failure \
                      --unit=rke2-init \
                      rke2 server"
    creates: "{{ systemd_dir }}/rke2.service"
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Fetch the rke2 cluster token from the initial node
  import_tasks: roles/rke2_server/tasks/fetch_cluster_token.yml
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Create RKE2 config
  template:
    src: "rke2-config.yaml.j2"
    dest: "/etc/rancher/rke2/config.yaml"
    owner: root
    group: root
    mode: '0644'
  when: ansible_hostname != hostvars[groups['master'][0]]['ansible_hostname']

- name: Init cluster (secondary) inside the transient rke2-init service
  command:
    cmd: "systemd-run -p RestartSec=2 \
                      -p Restart=on-failure \
                      --unit=rke2-init \
                      rke2 server"
    creates: "{{ systemd_dir }}/rke2.service"
  when: ansible_hostname != hostvars[groups['master'][0]]['ansible_hostname']

- name: Verification
  when: not ansible_check_mode
  block:
    - name: Verify that all nodes actually joined (check rke2-init.service if this fails)
      command:
        cmd: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
      register: nodes
      until: nodes.rc == 0 and (nodes.stdout.split(' ') | length) == (groups[group_name_master | default('master')] | length)  # yamllint disable-line rule:line-length
      retries: "{{ retry_count | default(20) }}"
      delay: 10
      changed_when: false
  always:
    - name: Save logs of rke2-init.service
      include_tasks: fetch_rke2_init_logs.yml
      when: log_destination
      vars:
        log_destination: >-
          {{ lookup('ansible.builtin.env', 'ANSIBLE_RKE2_LOG_DIR', default=False) }}
    - name: Kill the temporary service used for initialization
      systemd:
        name: rke2-init
        state: stopped
      failed_when: false
- name: Enable and check RKE2 service
  systemd:
    name: rke2-server
    daemon_reload: yes
    state: restarted
    enabled: yes